package com.socgen.gtba.swingtee;

import com.socgen.gtba.swingtee.filter.MxOutingBicFilter;
import org.apache.camel.Exchange;
import org.apache.camel.Message;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

class MxOutingBicFilterTest {

    private MxOutingBicFilter processor;

    @Mock
    private Exchange exchange;

    @Mock
    private Message message;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        processor = new MxOutingBicFilter();
        when(exchange.getIn()).thenReturn(message);
    }

    @Test
    void testProcessWithSGPBic() throws Exception {
        String xmlInput = "<Fr><FIId><FinInstnId><BICFI>SOGESGSG</BICFI></FinInstnId></FIId></Fr>";
        when(message.getBody(String.class)).thenReturn(xmlInput);

        processor.process(exchange);

        verify(exchange).setProperty("BICFI", "SOGESGSG");
    }

    @Test
    void testProcessWithHKGBic() throws Exception {
        String xmlInput = "<Fr><FIId><FinInstnId><BICFI>SOGEHKHH</BICFI></FinInstnId></FIId></Fr>";
        when(message.getBody(String.class)).thenReturn(xmlInput);

        processor.process(exchange);

        verify(exchange).setProperty("BICFI", "SOGEHKHH");
    }

    @Test
    void testProcessWithNoMatchingBIC() throws Exception {
        String xmlInput = "<Fr><FIId><FinInstnId><BICFI>UNKNOWNBIC</BICFI></FinInstnId></FIId></Fr>";
        when(message.getBody(String.class)).thenReturn(xmlInput);

        processor.process(exchange);

        verify(exchange, never()).setProperty(anyString(), anyString());
    }
}
